<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wizinno.apollo.app.domain.AppRunningInfoMapper" >

  <resultMap id="BaseResultMap" type="com.wizinno.apollo.app.domain.model.AppRunningInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 11 19:57:52 CST 2017.
    -->
    <id column="test_id" property="testId" jdbcType="VARCHAR" />
    <id column="user_id" property="userId" jdbcType="VARCHAR" />
    <id column="dev_id" property="devId" jdbcType="VARCHAR" />
    <id column="app_package" property="appPackage" jdbcType="VARCHAR" />
    <result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
    <result column="app_name" property="appName" jdbcType="VARCHAR" />
    <result column="app_ver" property="appVer" jdbcType="VARCHAR" />
    <result column="is_front_app" property="isFrontApp" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 11 19:57:52 CST 2017.
    -->
    delete from app_running_info
    where test_id = #{testId,jdbcType=VARCHAR}
    and user_id = #{userId,jdbcType=VARCHAR}
    and dev_id = #{devId,jdbcType=VARCHAR}
    and app_package = #{appPackage,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.wizinno.apollo.app.domain.model.AppRunningInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 11 19:57:52 CST 2017.
    -->
    insert into app_running_info (test_id, user_id, dev_id,
    app_package, check_time, app_name,
    app_ver, is_front_app)
    values (#{testId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{devId,jdbcType=VARCHAR},
    #{appPackage,jdbcType=VARCHAR}, #{checkTime,jdbcType=TIMESTAMP}, #{appName,jdbcType=VARCHAR},
    #{appVer,jdbcType=VARCHAR}, #{isFrontApp,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.wizinno.apollo.app.domain.model.AppRunningInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 11 19:57:52 CST 2017.
    -->
    update app_running_info
    set check_time = #{checkTime,jdbcType=TIMESTAMP},
    app_name = #{appName,jdbcType=VARCHAR},
    app_ver = #{appVer,jdbcType=VARCHAR},
    is_front_app = #{isFrontApp,jdbcType=INTEGER}
    where test_id = #{testId,jdbcType=VARCHAR}
    and user_id = #{userId,jdbcType=VARCHAR}
    and dev_id = #{devId,jdbcType=VARCHAR}
    and app_package = #{appPackage,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 11 19:57:52 CST 2017.
    -->
    select test_id, user_id, dev_id, app_package, check_time, app_name, app_ver, is_front_app
    from app_running_info
    where test_id = #{testId,jdbcType=VARCHAR}
    and user_id = #{userId,jdbcType=VARCHAR}
    and dev_id = #{devId,jdbcType=VARCHAR}
    and app_package = #{appPackage,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 11 19:57:52 CST 2017.
    -->
    select test_id, user_id, dev_id, app_package, check_time, app_name, app_ver, is_front_app
    from app_running_info
  </select>


  <select id="getAppRunnings" parameterType="com.wizinno.apollo.common.condition.AppRunningsCondition"
          resultType="com.wizinno.apollo.app.dto.NetTestAndAppRunDto">

    select a.* ,b.appNameFront from (select a.test_id as testId,any_value(a.check_time) as checkTime,n.test_event as testEvent, n.user_name as userName,
    n.mobile_num as mobileNum,n.device_imei as deviceImei,any_value(a.app_name) as appName,any_value(a.is_front_app) as isFrontApp,COUNT(1) as appRunTotal
    from app_running_info a
    left JOIN net_test_log n ON n.test_id = a.test_id

    GROUP BY a.test_id,a.user_id,a.dev_id
    order BY checkTime desc) a
    LEFT JOIN (    select app_name as appNameFront,test_id
    from app_running_info
    where is_front_app = 1)b on b.test_id=a.testId

    <where>
      <if test="uName != null">AND userName = #{uName,jdbcType=VARCHAR}</if>
      <if test="mobileNum != null">AND mobileNum= #{mobileNum,jdbcType=VARCHAR}</if>
      <if test="operator != null">AND operator = #{operator,jdbcType=VARCHAR}</if>
    </where>
    limit #{start,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}
  </select>


  <select id="getAppRunningsTotal" parameterType="com.wizinno.apollo.common.condition.AppRunningsCondition"
          resultType="java.lang.Long">
    SELECT count(1) FROM (select a.* ,b.appNameFront from (select a.test_id as testId,any_value(a.check_time) as
    checkTime,n.test_event as testEvent, n.user_name as userName,
    n.mobile_num as mobileNum,n.device_imei as deviceImei,any_value(a.app_name) as appName,any_value(a.is_front_app) as
    isFrontApp,COUNT(1) as appRunTotal
    from app_running_info a
    left JOIN net_test_log n ON n.test_id = a.test_id

    GROUP BY a.test_id,a.user_id,a.dev_id
    order BY checkTime desc) a
    LEFT JOIN ( select app_name as appNameFront,test_id
    from app_running_info
    where is_front_app = 1)b on b.test_id=a.testId

    <where>
      <if test="uName != null">AND userName = #{uName,jdbcType=VARCHAR}</if>
      <if test="mobileNum != null">AND mobileNum= #{mobileNum,jdbcType=VARCHAR}</if>
      <if test="operator != null">AND operator = #{operator,jdbcType=VARCHAR}</if>
    </where>) a
  </select>

  <select id="getAppRunningsByTestId" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(1)
    from app_running_info
    where test_id = #{testId,jdbcType=VARCHAR}
  </select>


  <select id="getAppRunningsByTestIdAndFrontApp" resultType="java.lang.String" parameterType="java.lang.String">
    select app_name
    from app_running_info
    where test_id = #{testId,jdbcType=VARCHAR} AND is_front_app=1
  </select>
</mapper>